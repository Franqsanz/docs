---
import { getLanguageFromURL } from '../util';
import languages from '../i18n/languages';

export interface Props {
	src: string;
	type: string;
}

const { src, type } = Astro.props as Props;
const url = new URL(Astro.request.url);
const lang = getLanguageFromURL(url.pathname);
const filename = src.substring(src.lastIndexOf('/') + 1, src.lastIndexOf('.'));

const allCaptions = import.meta.glob("../../public/captions/**/*.vtt", { as:'raw' });
const fileCaptions = Object.keys(allCaptions).map((caption) => {
	const captionPath = caption.substring(caption.indexOf('captions') - 1)
	const captionLang = captionPath.substring(10, captionPath.indexOf(filename) - 1);
	return {
		path: captionPath,
		lang: captionLang
	}
}).filter(({path}) => path.includes(filename))

const defaultLang = fileCaptions.find(({lang: cLang}) => cLang == lang) ? lang : 'en';
---
<video controls>
	<source src={src} type={type}>
	{fileCaptions.map(({lang, path}) => (
		<track label={languages[lang]} src={path} kind="captions" srclang={lang} default={lang == defaultLang}>
	))}
</video>
